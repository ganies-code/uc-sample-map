{"version":3,"sources":["schema.js","App.js","reportWebVitals.js","index.js"],"names":["schema","account","core","type","properties","name","active","classification","account_type","qbo_connection_attributes","external_id","additional_info","SyncToken","qb","Name","Active","Classification","AccountType","id","category","ParentRef","value","IncomeAccountRef","ExpenseAccountRef","AssetAccountRef","Type","enum","SubItem","TrackQtyOnHand","QtyOnHand","InvStartDate","PurchaseDesc","Description","ReorderPoint","PurchaseCost","UnitPrice","qbo_connection","Option","Select","flatDeep","arr","d","reduce","acc","val","concat","Array","isArray","slice","App","useState","selectedSchema","setselectedSchema","showJson","setShowJson","coreToQB","mapping","setMapping","getKeys","ob","Object","keys","map","el","Infinity","useEffect","className","style","textAlign","padding","defaultValue","width","marginRight","onChange","e","marginLeft","margin","background","color","schemas","i","console","log","_m","qd","qi","paddingRight","checkedChildren","unCheckedChildren","display","flex","borderRight","paddingLeft","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.06c8c327.chunk.js","sourcesContent":["let schema = {\n  account: {\n    core: {\n      type: \"object\",\n      properties: {\n        name: { type: \"string\" },\n        active: { type: \"boolean\" },\n        classification: { type: \"string\" },\n        account_type: { type: \"string\" },\n        qbo_connection_attributes: {\n          type: \"object\",\n          properties: {\n            external_id: { type: \"string\" },\n            additional_info: {\n              type: \"object\",\n              properties: {\n                SyncToken: { type: \"string\" },\n              },\n            },\n          },\n        },\n      },\n    },\n    qb: {\n      type: \"object\",\n      properties: {\n        Name: { type: \"string\" },\n        Active: { type: \"boolean\" },\n        Classification: { type: \"string\" },\n        AccountType: { type: \"string\" },\n        SyncToken: { type: \"string\" },\n        id: { type: \"string\" },\n      },\n    },\n  },\n  category: {\n    core: {\n      type: \"object\",\n      properties: {\n        name: { type: \"string\" },\n        qbo_connection_attributes: {\n          type: \"object\",\n          properties: {\n            external_id: { type: \"string\" },\n            additional_info: {\n              type: \"object\",\n              properties: {\n                SyncToken: { type: \"string\" },\n              },\n            },\n          },\n        },\n      },\n    },\n\n    qb: {\n      type: \"object\",\n      properties: {\n        Name: { type: \"string\" },\n        ParentRef: {\n          type: \"object\",\n          properties: {\n            value: { type: \"string\" },\n            name: { type: \"string\" },\n            type: { type: \"string\" },\n          },\n        },\n        IncomeAccountRef: {\n          type: \"object\",\n          properties: {\n            value: { type: \"string\" },\n            name: { type: \"string\" },\n            type: { type: \"string\" },\n          },\n        },\n        ExpenseAccountRef: {\n          type: \"object\",\n          properties: {\n            value: { type: \"string\" },\n            name: { type: \"string\" },\n            type: { type: \"string\" },\n          },\n        },\n        AssetAccountRef: {\n          type: \"object\",\n          properties: {\n            value: { type: \"string\" },\n            name: { type: \"string\" },\n            type: { type: \"string\" },\n          },\n        },\n        Type: {\n          type: \"string\",\n          enum: [\"Inventory\", \"Service\", \"NonInventory\", \"Category\"],\n        },\n        SubItem: { type: \"boolean\" },\n        TrackQtyOnHand: { type: \"boolean\" },\n        QtyOnHand: { type: \"number\" },\n        InvStartDate: { type: \"string\" },\n        PurchaseDesc: { type: \"string\" },\n        Description: { type: \"string\" },\n        ReorderPoint: { type: \"number\" },\n        PurchaseCost: { type: \"number\" },\n        UnitPrice: { type: \"number\" },\n        qbo_connection: { type: \"string\" },\n        id: { type: \"string\" },\n      },\n    },\n  },\n};\nexport default schema;\n","import \"./App.css\";\nimport \"antd/dist/antd.css\";\nimport { Select, Input, Button, Checkbox, Switch } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport JSONPretty from \"react-json-pretty\";\n\nimport schemas from \"./schema\";\nconst { Option } = Select;\n\nfunction App() {\n  const [selectedSchema, setselectedSchema] = useState(\"account\");\n  const [showJson, setShowJson] = useState(false);\n  const [mapping, setMapping] = useState({\n    account: {\n      coreToQB: {\n        name: \"Name\",\n        active: \"Active\",\n        classification: \"Classification\",\n        account_type: \"AccountType\",\n        \"qbo_connection_attributes.external_id\": \"id\",\n        \"qbo_connection_attributes.additional_info.SyncToken\": \"SyncToken\",\n      },\n    },\n    category: {\n      coreToQB: {},\n    },\n  });\n\n  const getKeys = (ob) => {\n    if (!ob) return;\n    let keys = Object.keys(ob).map((d) => {\n      if (ob[d].type !== \"object\") {\n        return d;\n      } else {\n        return getKeys(ob[d].properties).map((el) => d + \".\" + el);\n      }\n    });\n    return flatDeep(keys, Infinity);\n  };\n  useEffect(() => {\n    // console.log(getKeys(schemas.account.core.properties));\n  }, []);\n  return (\n    <div className=\"App\">\n      <div style={{ textAlign: \"left\", padding: 10 }}>\n        {\" Entity: \"}\n        <Select\n          defaultValue=\"account\"\n          style={{ width: 120, marginRight: 30 }}\n          onChange={(e) => {\n            setselectedSchema(e);\n          }}\n        >\n          <Option value=\"account\">Account</Option>\n          <Option value=\"invoice\">Invoice</Option>\n          <Option value=\"payment\">Payment</Option>\n          <Option value=\"purchaseOrder\">PurchaseOrder</Option>\n          <Option value=\"vendor\">Vendor</Option>\n          <Option value=\"category\">Category</Option>\n        </Select>\n        {\" Company:\"}\n        <Select\n          defaultValue=\"default\"\n          style={{ width: 160, marginLeft: 5 }}\n          onChange={(e) => {\n            // setselectedSchema(e);\n          }}\n        >\n          <Option value=\"account\">default</Option>\n          <Option value=\"company1\">company1</Option>\n          <Option value=\"company2\">company2</Option>\n          <Option value=\"company3\">company3</Option>\n          <Option value=\"company4\">company4</Option>\n          <Option value=\"company5\">company5</Option>\n          <Option value=\"company6\">company6</Option>\n          <Option value=\"company7\">company7</Option>\n          <Option value=\"company8\">company8</Option>\n          <Option value=\"company9\">company9</Option>\n          <Option value=\"company10\">company10</Option>\n          <Option value=\"company12\">company12</Option>\n          <Option value=\"company13\">company13</Option>\n        </Select>\n      </div>\n      {/* <div>{JSON.stringify(schemas[selectedSchema])}</div> */}\n      <hr />\n      <div style={{ textAlign: \"left\", margin: 10 }}>\n        <table>\n          <thead>\n            <tr style={{ background: \"#f1f1f1\" }}>\n              <td style={{ color: \"red\" }}>*</td>\n              <td>Core Entity</td>\n              <td>QB Entity</td>\n              <td>Transformation</td>\n              <td>Default Value</td>\n              <td>clear</td>\n            </tr>\n          </thead>\n          <tbody>\n            {schemas[selectedSchema] &&\n              schemas[selectedSchema].core &&\n              schemas[selectedSchema].core.properties &&\n              getKeys(schemas[selectedSchema].core.properties).map((d, i) => (\n                <tr key={d + i} style={{ padding: 5 }}>\n                  <td style={{}}>\n                    <Checkbox\n                      key={selectedSchema + \"-check-\" + i}\n                      onChange={(e) => {}}\n                    ></Checkbox>\n                  </td>\n                  <td style={{}}>\n                    <h4>{d}</h4>\n                  </td>\n                  <td>\n                    <Select\n                      key={selectedSchema + \"-\" + i}\n                      defaultValue={\n                        mapping[selectedSchema] &&\n                        mapping[selectedSchema][\"coreToQB\"] &&\n                        mapping[selectedSchema][\"coreToQB\"][d]\n                      }\n                      style={{ width: 220 }}\n                      onChange={(e) => {\n                        // setselectedSchema(e);\n                        console.log(e, selectedSchema);\n                        let _m = { ...mapping };\n                        if (!_m[selectedSchema]) _m[selectedSchema] = {};\n                        if (!_m[selectedSchema][\"coreToQB\"])\n                          _m[selectedSchema][\"coreToQB\"] = {};\n                        _m[selectedSchema][\"coreToQB\"][d] = e;\n                        setMapping(_m);\n                        console.log(_m);\n                      }}\n                    >\n                      {schemas[selectedSchema].qb &&\n                        schemas[selectedSchema].qb.properties &&\n                        getKeys(schemas[selectedSchema].qb.properties).map(\n                          (qd, qi) => (\n                            <Option key={qd + qi + i} value={qd}>\n                              {qd}\n                            </Option>\n                          )\n                        )}\n                      <Option value={\"Add new attribute\"}>\n                        <span style={{ color: \"green\" }}>\n                          Add new attribute\n                        </span>\n                      </Option>\n                    </Select>\n                  </td>\n                  <td>\n                    <Button> Add Transformation</Button>\n                  </td>\n                  <td>\n                    <Input />\n                  </td>\n                  <td>\n                    <Button>clear</Button>\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n      <hr />\n      <div style={{ textAlign: \"left\" }}>\n        <div style={{ textAlign: \"right\", paddingRight: 20 }}>\n          <Switch\n            value={showJson}\n            onChange={(e) => setShowJson(e)}\n            checkedChildren=\"Hide JSON View\"\n            unCheckedChildren=\"Show  JSON View\"\n          />\n        </div>\n        {showJson && (\n          <div style={{ display: \"flex\" }}>\n            <div\n              style={{\n                flex: 1,\n                borderRight: \"1px solid #ebebeb\",\n                paddingLeft: 40,\n              }}\n            >\n              {\" \"}\n              <h2>core {selectedSchema}</h2>\n              {schemas[selectedSchema] && (\n                <JSONPretty\n                  id=\"json-pretty\"\n                  data={schemas[selectedSchema].core}\n                ></JSONPretty>\n              )}\n            </div>\n            <div\n              style={{\n                flex: 1,\n                borderRight: \"1px solid #ebebeb\",\n                paddingLeft: 40,\n              }}\n            >\n              <h2>QB {selectedSchema}</h2>\n              {schemas[selectedSchema] && (\n                <JSONPretty\n                  id=\"json-pretty\"\n                  data={schemas[selectedSchema].qb}\n                ></JSONPretty>\n              )}\n            </div>\n            <div style={{ flex: 2, paddingLeft: 40 }}>\n              <h2>Core to QB {selectedSchema}</h2>\n              <JSONPretty\n                id=\"json-pretty\"\n                data={mapping[selectedSchema]}\n              ></JSONPretty>\n\n              <h2>QB to Core {selectedSchema}</h2>\n              {mapping[selectedSchema] && (\n                <JSONPretty\n                  id=\"json-pretty\"\n                  data={mapping[selectedSchema]}\n                ></JSONPretty>\n              )}\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction flatDeep(arr, d = 1) {\n  return d > 0\n    ? arr.reduce(\n        (acc, val) =>\n          acc.concat(Array.isArray(val) ? flatDeep(val, d - 1) : val),\n        []\n      )\n    : arr.slice();\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}